métodos http 

get -> pegar dados
post -> criar dados
put/patch  -> atualizar dados 
delete -> deletar dados 

Status code
- 200 ao 299 - sucesso
- 400 ao 499 - erro do cliente
- 500 ao 500 - erro do servidor

_________________________________________________________________________
Criando nossas rotas

✅- instalar express -> npm i express 
✅- no index.ts, importe o express -> import express from 'express'; 
✅- crie uma variavel chamada server que recebe o express() 
✅- instale o types/express -> npm i -D @types/express
✅- chame o server.listen(5000) para ouvir a porta 5000 
✅- chame o server.get('/') -> rota de entrada,  
✅- depois de sinalizar o path da rota '/', insira uma af () => {} com dois parametros, request e response 
✅- tipe esses parametros com :Request e :Response, importe eles no mesmo caminho de importação do express   
✅- por fim, dentro do objeto da af, retorne o response.status(200).json({ message: 'Vbank API' }) -> sucesso
✅- use o postman e teste a rota com get localhost:5000/ 
✅- agora vamos simular a criação de um usuario, no index.ts, crie o server.post('/user'), (request:Request, response:Response) 
✅- o post acima ira ter dentro do objeto um const body que recebe um request.body e valide a variavel com um log nela 
✅- para testar, use o post no postman e insira a url do metodo que acabamos de criar '/user' 
✅- ainda dentro do metodo post, retorne response.status(201).json({message: 'Usuário criado' })
✅- o express por padrão nao utiliza o formato de requisição JSON, para fazer isso, chame o server.use(express.json())
-----------------------------------------------------------------------------------------------------------------------------------

 
✅- No index.ts crie uma variavel chamada db que recebe uma array
✅- Dentro dessa array, crie um objeto com name: “sophia”, email:”sophia@email.com”
✅- Dentro de src, crie uma pasta chamada controllers
✅- crie um arquivo dentro da pasta criada, um arquivo chamado UserController.ts
✅- Dentro do arquivo crie uma class UserController {}
✅- Dentro do objeto insira uma função chamada createUser = () ⇒ {}
✅- A função que este dentro de server.post() no arquivo principal do index.ts, retire ela desde o parametro de request e response até a chave do final do objeto e insira dentro da função createUser que acabamos de criar substia o parametro vazio pelo que acabmos de copiar
✅- importe o request e response
✅- exporte a classe criada
✅-  agora, instancie essa classe que criamos no arquivo principal criando uma variavel userController que recebe uma new UserController()
✅- agora na rota server post depois da virgula da rota, instacie a nova variavel criada acima e use o metodo com um .createUser
✅- faça o teste no postman pra ver se a rota ainda esta funcionando
✅- altere a variavel db de lugar, coloque no controller que acabamos de criar em cima da classe
✅- na função createUser, altere o log(body) para db.push(user)
✅- de um log na variavel db depois do push acima
✅- faça um teste no postman, fazendo um POST e enviando o usuario teste em um objeto no raw e chame a rota


